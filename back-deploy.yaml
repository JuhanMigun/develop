apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-deploy-mounted2
  namespace: deploy
spec:
  selector:
    matchLabels:
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        tier: backend
    spec:
      containers:
      - name: back-app
        image: 891377163278.dkr.ecr.ap-northeast-2.amazonaws.com/mydata-was:lib-tomcat
        #image: 891377163278.dkr.ecr.ap-northeast-2.amazonaws.com/develop-was:view-tomcat
        #image: 891377163278.dkr.ecr.ap-northeast-2.amazonaws.com/exit-develop-was:exit-was
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts: # 생성한 볼륨 마운트
        - name: my-pv
          mountPath: /usr/local/tomcat/webapps/ROOT/data/
          #mountPath: /usr/share
        resources:
          requests:
            cpu: 200m
            memory: 200M
      - name: fluentd
        image: fluent/fluentd:v1.11.5
        env:
        - name: FLUENTD_CONF
          value: "fluentd.conf"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: config-volume
          mountPath: /fluentd/etc
      volumes: # 위에서 생성한 PVC를 이용하여 볼륨 생성
      - name: my-pv
        persistentVolumeClaim:
          claimName: efs-pvc
      - name: varlog
        emptyDir: {}
      - name: config-volume
        configMap:
          name: fluentd-config
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: tier
      #           operator: In
      #           values:
      #           - backend
      #       topologyKey: "kubernetes.io/hostname"
